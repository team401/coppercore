name: CI

on: [push, pull_request]

jobs:
  build-docker:
    strategy:
      fail-fast: false
      matrix:
        include:
          - container: wpilib/roborio-cross-ubuntu:2024-22.04
            artifact-name: Athena
            build-options: "-Ponlylinuxathena"
          - container: wpilib/ubuntu-base:22.04
            artifact-name: Linux
            build-options: ""
    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ubuntu-latest
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
      
      - name: Fetch history and metadata
        run: git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew build --max-workers 1 ${{ matrix.build-options }}
        
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact-name }}
          path: build/allOutputs

  build-host:
    env: 
      MACOSX_DEPLOYMENT_TARGET: 12
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            artifact-name: Win64
            architecture: x64
          - os: macos-12
            artifact-name: macOS
            architecture: x64
          - os: ubuntu-latest
            artifact-name: ubuntu
            architecture: x64
    name: "Build - ${{ matrix.artifact-name }}"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Fetch all history and metadata
        run: git fetch --prune --unshallow

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: ${{ matrix.architecture }}

      - name: Build with Gradle
        run: ./gradlew build -Pbuildalldesktop

      - name: Update Maven Snapshots
        run: mvn --batch-mode --update-snapshots verify
      
      - name: Create Staging Area
        run: mkdir staging && cp target/*.jar staging
      
      - uses: actions/upload-artifact@v4
        with:
          name: Package
          path: staging
