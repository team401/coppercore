import com.vanniktech.maven.publish.SonatypeHost
import com.vanniktech.maven.publish.JavaLibrary
import com.vanniktech.maven.publish.JavadocJar

plugins {
	// Apply the java-library plugin for API and implementation separation.
	id 'java-library'
	id "com.diffplug.spotless" version "6.24.0"
	id "com.vanniktech.maven.publish" version "0.30.0"
}

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

spotless {
// optional: limit format enforcement to just the files changed by this feature branch
ratchetFrom 'origin/main'

format 'misc', {
	// define the files to apply `misc` to
	target '*.gradle', '.gitattributes', '.gitignore'

	// define the steps to apply to those files
	trimTrailingWhitespace()
	indentWithTabs() // or spaces. Takes an integer argument if you don't like 4
	endWithNewline()
}
java {
	// don't need to set target, it is inferred from java
	// Allow ignoring certain parts in formatting.
	toggleOffOn()
	// apply a specific flavor of google-java-format
	googleJavaFormat('1.19.2').aosp().reflowLongStrings()
	// fix formatting of type annotations
	formatAnnotations()
}
}

compileJava.dependsOn 'spotlessApply'


dependencies {
	// Use JUnit Jupiter for testing.
	testImplementation libs.junit.jupiter

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// This dependency is exported to consumers, that is to say found on their compile classpath.
	api libs.commons.math3

	// This dependency is used internally, and not exposed to consumers on their own compile classpath.
	implementation libs.guava
	def wpilibVersion = "2025.1.1-beta-1"
	implementation "edu.wpi.first.wpilibj:wpilibj-java:$wpilibVersion"
	implementation "edu.wpi.first.wpiutil:wpiutil-java:$wpilibVersion"
	implementation "edu.wpi.first.wpilibNewCommands:wpilibNewCommands-java:$wpilibVersion"
	implementation "edu.wpi.first.wpiunits:wpiunits-java:$wpilibVersion"
	implementation "edu.wpi.first.wpimath:wpimath-java:$wpilibVersion"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

tasks.named('test') {
	// Use JUnit Platform for unit tests.
	useJUnitPlatform()
}

compileJava.dependsOn 'spotlessApply'


// Add this to each subproject separately.
mavenPublishing {

	configure(new JavaLibrary(new JavadocJar.Javadoc(), true))
	publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)

	// Project release information.
	coordinates(group, project.name, version)
	pom {
		name = project.name
		inceptionYear = "2024"
		description = 'FRC 401 supplemental math functions'
		url = 'http://www.github.com/team401/coppercore'
		licenses {
			license {
				name = 'MIT License'
				url = 'https://opensource.org/license/mit'
			}
		}
		developers {
			developer {
				id = 'aidnem'
				name = 'Aiden Mathai'
			}
			developer {
				id = 'linglejack'
				name = 'Jack Lingle'
			}
			developer {
				id = 'avidraccoon'
				name = 'Nathan Smith'
			}
			developer {
				id = 'minhngyuenbhs'
				name = 'Minh Ngyuen'
			}
			developer {
				id = 'jkleiber'
				name = 'Justin Kleiber'
			}
		}
		scm {
			url = "https://github.com/team401/coppercore/"
			connection = "scm:git:git://github.com/team401/coppercore.git"
			developerConnection = "scm:git:ssh://git@github.com/team401/coppercore.git"
		}
	}
}
